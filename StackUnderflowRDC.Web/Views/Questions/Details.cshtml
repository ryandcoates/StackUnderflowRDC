@using Microsoft.EntityFrameworkCore
@using StackUnderflowRDC.Entities
@*@model StackUnderflowRDC.Entities.Question*@
@model StackUnderflowRDC.Entities.DTO.QuestionDto
@*@model StackUnderflowRDC.Entities.Comment*@

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Details</h2>

<div>
    <h4>Question</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Question.Body)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Question.Body)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Question.Author)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Question.Author)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Question.PostedAt)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Question.PostedAt)
        </dd>
        @*<dt>
                @Html.DisplayNameFor(model => model.AnswerId)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.AnswerId)
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.Score)
            </dt>
            <dd>
                @Html.DisplayFor(model => model.Score)
            </dd>*@
        <dt>
            @Html.DisplayNameFor(model => model.Question.Answered)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Question.Answered)
            @*@Html.DisplayFor(model => model.Responses)*@
        </dd>
    </dl>
    <div>
        <a asp-action="ResponseCreate" asp-route-id="@Model.Question.Id">Answer the Question</a> |
        <a asp-action="Index">Back to List</a>
    </div>
    @foreach (var response in Model.Responses)
    {
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(x => response.Response.Author)
            </dt>
            <dd>
                @Html.DisplayFor(x => response.Response.Author)
            </dd>
            <dt>
                @Html.DisplayNameFor(x => response.Response.Score)
            </dt>
            <dd>
                @Html.DisplayFor(x => response.Response.Score)
            </dd>
            <dt>
                @Html.DisplayNameFor(x => response.Response.Body)
            </dt>
            <dd>
                @Html.DisplayFor(x => response.Response.Body)
            </dd>
            <dt>
                Buttons
            </dt>
            <dd>
                <button type="button" onclick="location.href='@Url.Action("UpVote","Comments", response.Response.Id)'">Updoot</button> |
                <button type="button" onclick="location.href='@Url.Action("DownVote","Comments", response.Response.Id)'">Downdoot</button>
            </dd>
        </dl>
        if (response.Response.Comments != null)
        {
            foreach (var responseComment in response.Response.Comments)
            {
                <dl class="dl-horizontal">
                    <dt>
                        @Html.DisplayNameFor(x => responseComment.Author)
                    </dt>
                    <dd>
                        @Html.DisplayFor(x => responseComment.Author)
                    </dd>
                    <dt>
                        @Html.DisplayNameFor(x => responseComment.Body)
                    </dt>
                    <dd>
                        @Html.DisplayFor(x => responseComment.Body)
                    </dd>
                </dl>
            }
        }
    }
</div>
